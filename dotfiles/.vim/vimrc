if exists('g:vscode')
    " VSCode extension
else
    " ordinary vim

    set relativenumber
set number
set nocompatible

syntax on
set background=dark

    " highlight matching parens, braces, brackets, etc
    set showmatch

    set hidden

    set autoindent
    set smartindent
    set shiftwidth=4

    if !has('nvim')
colorscheme jamesnzl

        " make scrolling and painting fast
        " ttyfast kept for vim compatibility but not needed for nvim
        set ttyfast lazyredraw

	nnoremap <A-j> :m .+1<CR>==
	nnoremap <A-k> :m .-2<CR>==
	inoremap <A-j> <Esc>:m .+1<CR>==gi
	inoremap <A-k> <Esc>:m .-2<CR>==gi
	vnoremap <A-j> :m '>+1<CR>gv=gv
	vnoremap <A-k> :m '<-2<CR>gv=gv

	let c='a'
	while c <= 'z'
	  exec "set <A-".c.">=\e".c
	  exec "imap \e".c." <A-".c.">"
	  let c = nr2char(1+char2nr(c))
	endw

	set ttimeout ttimeoutlen=50
    endif

endif

" statusline indicates insert or normal mode
set showmode showcmd

" use system clipboard
" https://anuragpeshne.github.io/essays/vim/7.html
noremap y "*y
noremap yy "*yy
noremap Y "*y$
noremap <leader>x "*x
noremap <leader>d "*d
noremap <leader>D "*D
noremap <leader>dd "*dd
noremap p "*p
noremap P "*P

noremap x "_x
noremap d "_d
noremap D "_D
noremap dd "_dd

nnoremap <esc><esc> :noh<return><esc>

" Search for selected text, forwards or backwards.
vnoremap <silent> * :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy/<C-R>=&ic?'\c':'\C'<CR><C-R><C-R>=substitute(
  \escape(@", '/\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gVzv:call setreg('"', old_reg, old_regtype)<CR>
vnoremap <silent> # :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy?<C-R>=&ic?'\c':'\C'<CR><C-R><C-R>=substitute(
  \escape(@", '?\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gVzv:call setreg('"', old_reg, old_regtype)<CR>
